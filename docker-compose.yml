version: '3.4'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    networks:
     - my_network
    expose:
      - "2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    networks:
     - my_network
    expose:
      - "9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_NAME_PLAINTEXT: INSIDE
      KAFKA_LISTENERS: INSIDE://0.0.0.0:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  netadvancedcourse:
    image: ${DOCKER_REGISTRY-}netadvancedcourse
    build:
      context: .
      dockerfile: NetAdvancedCourse/Dockerfile
    networks:
     - my_network
    container_name: netadvancedcourse

  cartingservice:
    image: ${DOCKER_REGISTRY-}cartingservice
    build:
      context: .
      dockerfile: CartingServiceAPI/CartingService/Dockerfile
    networks:
     - my_network
    container_name: cartingservice

  catalogservice:
    image: ${DOCKER_REGISTRY-}catalogservice
    build:
      context: .
      dockerfile: CatalogServiceAPI/CatalogService/Dockerfile
    networks:
     - my_network
    container_name: catalogservice

  authenticationservice:
    image: ${DOCKER_REGISTRY-}authenticationservice
    build:
      context: .
      dockerfile: AuthenticationService/Dockerfile
    networks:
     - my_network
    container_name: authenticationservice

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

networks:
   my_network:
     driver: bridge 

